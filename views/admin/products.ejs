<%- include('../layouts/header') %>
<link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css"
  >

    <main id="main" class="main">

        <div class="pagetitle">
            <h1>Products</h1>

        </div><!-- End Page Title -->
        <section class="section d-flex justify-content-end ">
            
            
            <input type="file" id="inputImage" accept="image/*">

<!-- Create a container for the Cropper.js instance -->
<div id="imageContainer">
  <img id="image" src="" alt="Preview" style="max-width: 100%;">
</div>

<!-- Add buttons for crop actions -->
<button id="cropButton">Crop</button>
<button id="zoomInButton">Zoom In</button>
<button id="zoomOutButton">Zoom Out</button>
<button id="rotateLeftButton">Rotate Left</button>
<button id="rotateRightButton">Rotate Right</button>

            
            
            <!-- Button to Trigger the Modal -->
            <div class="col-auto px-2 py-2">
                <button type="button" class="btn btn-primary mb-2" data-bs-toggle="modal"
                    data-bs-target="#addProductModal">
                    <i class="bi bi-plus-lg"></i>
                    Add Product
                </button>
            </div>

            <!-- Modal for Adding a Product -->
            <div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel"
                aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addProductModalLabel">Add Product</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">

                            <!-- //enctype="multipart/form-data" -->
                            <form id="productForm" method="post" action="/admin/addproduct"
                                enctype="multipart/form-data">
                                <!-- Product Form Goes Here -->
                                <div class="mb-3">
                                    <label for="productName" class="form-label">Product Name</label>
                                    <input type="text" class="form-control" id="productName" name="productName"
                                        required>
                                </div>

                                <div class="mb-3">
                                    <label for="productPrice" class="form-label">Price</label>
                                    <input type="number" class="form-control" id="productPrice" name="price" required>
                                </div>

                                <div class="mb-3">
                                    <label for="productDescription" class="form-label">Product Description</label>
                                    <textarea class="form-control" id="productDescription" name="productDescription"
                                        required></textarea>
                                </div>

                                <div class="mb-3">
                                    <label for="productCategory" class="form-label">Category</label>
                                    <select class="form-select" id="productAddCategory" name="category" required>
                                        <option value="" disabled>Available Categories</option>
                                        <% categories.forEach((category)=> { %>
                                            <option value="<%= category._id %>">
                                                <%= category.categoryName %>
                                            </option>
                                            <% }) %>
                                    </select>
                                </div>

                                <div class="mb-3">
                                    <label for="productSubcategory" class="form-label">Subcategory</label>
                                    <select class="form-select" id="productAddSubcategory"  name="subcategory" required>
                                        <option value="" disabled>Available Sub Categories</option>
                                    </select>
                                </div>

                                <div class="mb-3">
                                    <label for="productStock" class="form-label">Stock</label>
                                    <input type="number" class="form-control" id="productStock" name="quantityInStock"
                                        required>
                                </div>

                                <div class="mb-3">
                                    <label for="productImages" class="form-label">Product Images</label>
                                    <input type="file" class="form-control" id="productImages" name="productImages"
                                        accept="image/*" multiple>
                                </div>

                                <div class="mb-3">
                                    <label for="productStatus" class="form-label">Status</label>
                                    <select class="form-select" id="productStatus" name="productStatus" required>
                                        <option value="active">Active</option>
                                        <option value="inactive">Inactive</option>
                                    </select>
                                </div>

                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary"
                                        data-bs-dismiss="modal">Close</button>
                                    <button type="submit" class="btn btn-primary">Save Product</button>
                                </div>
                            </form>

                        </div>
                    </div>
                </div>
            </div>


        </section>
        <section>
            <table id="example" class="table datatable" style="width:100%">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Image</th>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Stock</th>
                        <th>Last Updated</th>
                        <th>Status</th>
                        <th>Price</th>
                        <th>Actions</th>

                    </tr>
                </thead>
                <tbody>
                    
                    <% let i =0; products.forEach(function(product) { %>
                        <tr>
                            <td>
                                <%= product._id %>
                            </td>
                            <td>
                                <img src='http://localhost:3000/uploads/<%= product.productImages[0] %>'
                                    style="width:80px; height:80px;" data-bs-toggle="modal"
                                    data-bs-target="#myModal<%= product._id %>">


                                <!-- Modal -->
                                <div class="modal fade" id="myModal<%= product._id %>" tabindex="-1"
                                    aria-labelledby="exampleModalLabel" aria-hidden="true">
                                    <div class="modal-dialog modal-dialog-scrollable modal-md">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h4 class="modal-title">Product Images</h4>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                                    aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <% product.productImages.forEach(function(imageUrl, index) { %>
                                                    <img src='http://localhost:3000/uploads/<%= imageUrl %>'
                                                        class="img-fluid" alt="Image <%= index + 1 %>"
                                                        style="width:1800px; height:auto">
                                                    <h3></h3>
                                                    <% }); %>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <%= product.productName %>
                            </td>
                            <td>
                                <%= product.productDescription %>
                            </td>
                            <td>
                                <%= product.quantityInStock %>
                            </td>
                            <td>
                                <%= product.updatedAt %>
                            </td>
                            <td>

                                <% if (product.isAvailable==true){%>

                                    <button class="btn btn-dark toggle-availability"
                                        data-product-id="<%= product._id %>"
                                        data-is-available="<%= product.isAvailable %>"
                                        onclick="toggleAvailability(this)">
                                        <%= product.isAvailable ? 'Active' : 'Inactive' %>
                                    </button>


                                    <% } else {%>

                                        <button class="btn btn-dark toggle-availability"
                                            data-product-id="<%= product._id %>"
                                            data-is-available="<%= product.isAvailable %>"
                                            onclick="toggleAvailability(this)">
                                            <%= product.isAvailable ? 'Active' : 'Inactive' %>
                                        </button>

                                        <%}%>

                            </td>

                            <td>
                                <%= product.price %>
                            </td>
                            <td>
                                <button class="btn btn-warning" data-bs-toggle="modal"
                                    data-bs-target="#editProductModal<%= product._id %>">Edit</button>

                            </td>
                        </tr>


                        <!-- Modal for editing a product -->
                        <div class="modal fade" id="editProductModal<%= product._id %>" tabindex="-1"
                            aria-labelledby="editProductModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-lg">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"
                                            aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <!-- Form for editing a product (add form fields as needed) -->
                                       
                                        <form id="editProductForm<%= product._id %>" enctype="multipart/form-data"   method="post" action="/admin/editProduct/<%= product._id %>">
                                               
                                            <!-- Product name -->
                                                <div class="mb-3">
                                                    <label for="editProductName" class="form-label">Product Name</label>
                                                        <input type="text" class="form-control"
                                                            id="editProductName<%= product._id %>" name="editProductName"
                                                            value="<%= product.productName %>" required>
                                                </div>

                                            <!-- Product description -->
                                                <div class="mb-3">
                                                    <label for="editProductDescription" class="form-label">Product
                                                        Description</label>
                                                        <textarea class="form-control"
                                                            id="editProductDescription<%= product._id %>"
                                                            name="editProductDescription"
                                                            required><%= product.productDescription %></textarea>
                                                </div>
                                        
                                            <!-- Stock quantity -->
                                                <div class="mb-3">
                                                    <label for="editProductStock" class="form-label">Stock Quantity</label>
                                                        <input type="number" class="form-control"
                                                            id="editProductStock<%= product._id %>" name="editProductStock"
                                                            value="<%= product.quantityInStock %>" required>
                                                </div>

                                                <!-- Category select field -->
                                                    <div class="mb-3">
                                                        <label for="editProductCategory" class="form-label">Category</label>
                                                            <select class="form-select" id="editProductCategory<%= product._id %>" name="editProductCategory" required
                                                                onchange="loadSubcategories(value,'<%= i%>')">
                                                                <option value="" disabled>Select a category</option>
                                                                <% categories.forEach(category => { %>
                                                                    <option value="<%= category._id %>" <%= category._id.toString() === product.category.toString() ? 'selected' : '' %>>
                                                                        <%= category.categoryName %>
                                                                    </option>
                                                                <% }); %>
                                                            </select>
                                                    </div>

                                                <!-- Subcategory select field -->
                                                    <div class="mb-3">
                                                        <label for="editProductSubcategory" class="form-label">Subcategory</label>
                                                            <select class="editProductSubcategory form-select" name="editProductSubcategory" required
                                                                    data-product-id="<%= product._id %>">
                                                                <option value="" disabled>Select a subcategory</option>
                                                        </select>
                                                    </div>
                                           

                                                <!-- Product image (You can choose to edit or delete existing images) -->
                                                    <div class="mb-3">
                                                        <label for="editProductImages" class="form-label">Product Images</label>
                                                            <input type="file" class="form-control"
                                                                id="editProductImages<%= product._id %>" name="editProductImages"
                                                                accept="image/*" multiple>
                                                    </div>
                                          
                                                <!-- Product price -->
                                                    <div class="mb-3">
                                                        <label for="editProductPrice" class="form-label">Price</label>
                                                            <input type="number" class="form-control"
                                                                id="editProductPrice<%= product._id %>" name="editProductPrice"
                                                                value="<%= product.price %>" required>
                                                    </div>

                                                <!-- Display existing images -->
                                                    <div class="mb-3">
                                                        <label for="existingProductImages<%= product._id %>"
                                                            class="form-label">Existing Product Images</label>
                                                            <div id="existingProductImages<%= product._id %>">
                                                                <% product.productImages.forEach(function(imageUrl,index) { %>
                                                                    <img src="/uploads/<%= imageUrl %>" alt="Product Image"
                                                                        class="img-thumbnail">
                                                                        <button type="button" class="btn btn-danger delete-image-button"
                                                                            onclick="deleteImage('<%= product._id %>','<%= imageUrl %>')">
                                                                            Delete
                                                                        </button>
                                                                        <button type="button"
                                                                            class="btn btn-secondary update-image-button"
                                                                            onclick="updateImage('<%= product._id %>','<%= imageUrl %>')">
                                                                            Update
                                                                        </button>
                                                                    <% }); %>
                                                            </div>
                                                    </div>

                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary"
                                                data-bs-dismiss="modal">Close</button>
                                                <button type="submit" class="btn btn-primary">Save Changes</button>
                                            </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <% i++ }) %>

                            </tfoot>
            </table>
        </section>


    </main><!-- End #main -->

    <script>
        // Function to populate subcategories based on the selected category (This is for adding product)

        const addCategorySelect = document.getElementById('productAddCategory');
        const addSubcategorySelect = document.getElementById('productAddSubcategory');
        console.log("category select value",addCategorySelect.value)
        addCategorySelect.addEventListener('change', async () => {

            const addSelectedCategoryId = addCategorySelect.value;
            
            console.log(addSelectedCategoryId)
            // Clear previous subcategory options
            addSubcategorySelect.innerHTML = '';
            // Fetch subcategories from the server based on the selected category ID
            await fetch(`/admin/productSubcategories`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ categoryId:addSelectedCategoryId })
            })
                .then((response) => response.json())
                .then((subcategories) => {
                    subcategories.forEach((subcategory) => {
                        const option = document.createElement('option');
                        option.value = subcategory._id;
                        option.text = subcategory.subcategoryName;
                        document.getElementById('productAddSubcategory').appendChild(option);
                    });
                })
                .catch((error) => {
                    console.error(error);
                });
        });


        // =========================================================================== //        

        async function toggleAvailability(button) {


            const confirm = window.confirm('Do you want to change the status?')
            if (confirm == true) {
                const productId = button.getAttribute('data-product-id')
                const isAvailable = button.getAttribute('data-is-available') === 'true'

                try {
                    // Send a POST request to the server to update the product's availabilty
                    const response = await fetch(`/admin/update-availability`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ isAvailable: !isAvailable, productId })

                    })
                        .then((response) => {
                            if (response.ok) {
                                return response.json()
                            } else {
                                console.error('failed to update availability');
                                throw new Error('failed to upadate availability')
                            }
                        })
                        .then((data) => {
                            button.textContent = !isAvailable ? 'Active' : 'Inactive';
                            button.setAttribute('data-is-available', String(!isAvailable));
                            alert(data.ok)
                        })
                        .catch((error) => {
                            console.error(error);
                        })

                } catch (error) {
                    console.error(error);
                }
            } else {
                return
            }
        }
        
        
        // =============================== Edit category ==================================== //

       async function loadSubcategories (id,j) {
            // console.log(id)
        const subList = await fetch(`/admin/loadSubcategories`,{
                method: 'POST',
                headers: {
                    'Content-Type':'application/json'
                },
                body: JSON.stringify({categoryId:id})
            })

            .then((value) => {
                return value.json()
            })
            .catch((err) => {
                console.error(err);
            })

            let editProductSubcategory = document.getElementsByClassName("editProductSubcategory")[j].innerHTML
            console.log(subList)
            document.getElementsByClassName("editProductSubcategory")[j].innerHTML=''
            for (let i=0;i<subList.length;i++) {
                let option = document.createElement("option");
                option.value = subList[i]._id
                option.text = subList[i].subcategoryName
                document.getElementsByClassName("editProductSubcategory")[j].appendChild(option);
            }
        }


        // ========================  delete Image ============================ // 

        function deleteImage(productId, imageUrl) {
            // Use SweetAlert for confirmation
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to delete this image.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, keep it'
            }).then((result) => {
                if (result.isConfirmed) {
                    // User confirmed the deletion
                    // Make an AJAX/Fetch request to your server
                    fetch('/admin/deleteImage', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            productId: productId,
                            imageUrl: imageUrl,
                        }),
                    })
                        .then(response => {
                            if (response.ok) {
                                // Remove the image from the HTML

                                Swal.fire({
                                    icon: 'success',
                                    title: 'Image Deleted',
                                    text: 'The Image has been Deleted Successfully.',
                                    showCancelButton: false,
                                    confirmButtonText: 'Ok',
                                    timer: 2000,
                                }).then(() => {
                                    // Redirect to the login page
                                    window.location.reload()
                                });
                            } else {
                                Swal.fire('Failed', 'Failed to delete the image.', 'error');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire('Error', 'An error occurred while deleting the image.', 'error');
                        });
                }
            });
        }


    </script>

<script>
    // Function to initialize Cropper.js
function initCropper(imageUrl) {
  const image = document.getElementById('image');
  const cropper = new Cropper(image, {
    aspectRatio: 1, // Set the aspect ratio you want
    viewMode: 1, // Set the view mode (0, 1, 2, 3)
    crop(event) {
      // Access cropping data here
      console.log('Cropped Data:', event.detail);
    },
  });

  // Add event listeners for zoom and rotate buttons
  const zoomInButton = document.getElementById('zoomInButton');
  zoomInButton.addEventListener('click', () => {
    cropper.zoom(0.1); // Adjust zoom factor as needed
  });

  const zoomOutButton = document.getElementById('zoomOutButton');
  zoomOutButton.addEventListener('click', () => {
    cropper.zoom(-0.1); // Adjust zoom factor as needed
  });

  const rotateLeftButton = document.getElementById('rotateLeftButton');
  rotateLeftButton.addEventListener('click', () => {
    cropper.rotate(-90); // Rotate counterclockwise
  });

  const rotateRightButton = document.getElementById('rotateRightButton');
  rotateRightButton.addEventListener('click', () => {
    cropper.rotate(90); // Rotate clockwise
  });

  // Set the initial image URL
  image.src = imageUrl;
}

// Handle file input change event
const inputImage = document.getElementById('inputImage');
inputImage.addEventListener('change', function () {
  const file = this.files[0];
  if (file) {
    const reader = new FileReader();
    reader.onload = function (e) {
      const imageUrl = e.target.result;
      initCropper(imageUrl); // Initialize Cropper.js with the selected image
    };
    reader.readAsDataURL(file);
  }
});

// Handle crop button click event
const cropButton = document.getElementById('cropButton');
cropButton.addEventListener('click', function () {
  // Get the cropped data (coordinates) and use it as needed
  const cropper = document.getElementById('image').cropper;
  const croppedData = cropper.getData();
  console.log('Cropped Data:', croppedData);
});

</script>

    <!-- Add this to your HTML template -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <%- include('../layouts/footer') %>